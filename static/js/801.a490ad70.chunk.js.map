{"version":3,"file":"static/js/801.a490ad70.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.styled.js","components/ErrorMessage/ErrorMessage.jsx","components/Review/Review.styled.js","components/Review/Review.jsx","pages/Reviews.jsx","services/api.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const ErrorMessageWrapper = styled.div`\n  background-color: #ff6666; /* Червоний фон */\n  color: #fff; /* Білий колір тексту */\n  border: 2px solid #cc0000; /* Червона рамка */\n  padding: 10px;\n  font-weight: bold;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  text-align: center;\n  font-size: 16px;\n  margin: 10px;\n`;\n","import React from 'react';\nimport { ErrorMessageWrapper } from './ErrorMessage.styled';\n\nconst ErrorMessage = ({ message }) => {\n  return <ErrorMessageWrapper>{message}</ErrorMessageWrapper>;\n};\n\nexport default ErrorMessage;\n","import { styled } from 'styled-components';\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 36px;\n  }\n\n  padding: 8px;\n\n  box-shadow: rgba(166, 112, 0, 0.2) 0px 0px 5px 0px,\n    rgba(166, 112, 0, 0.4) 0px 0px 1px 0px;\n`;\n\nexport const AuthorText = styled.p`\n  margin-bottom: 16px;\n\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nexport const AuthorName = styled.span`\n  color: #132b55;\n`;\n","import { AuthorName, AuthorText, ListItem } from './Review.styled';\n\nexport const Review = ({ author, content }) => {\n  return (\n    <ListItem>\n      <AuthorText>\n        Author: <AuthorName>{author}</AuthorName>\n      </AuthorText>\n      <p>{content}</p>\n    </ListItem>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Wrapper } from 'components/GeneralStyled/General.styled';\nimport { Review } from 'components/Review/Review';\nimport { getReviews } from 'services/api';\nimport { Loader } from 'components/Loader';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const scrollToAdditional = () => {\n    window.scrollTo({ top: 500, behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    async function getReviewsInfo() {\n      try {\n        setLoading(true);\n        const response = await getReviews(movieId);\n        setReviews(response);\n        scrollToAdditional();\n      } catch (error) {\n        const errorMessage =\n          error.response?.data.message ||\n          'An error occurred while fetching reviews.';\n\n        // console.log('errorMessage: ', errorMessage);\n        setError(errorMessage);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getReviewsInfo();\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      {loading && <Loader />}\n      {error && <ErrorMessage message={error} />}\n\n      {reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <Review key={id} author={author} content={content}></Review>\n          ))}\n        </ul>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Reviews;\n\n// {reviews !== null &&\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '687e4525be1a45f56930e098a4988fd3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  console.log('data: ', data);\n  console.log('data: ', data.results);\n  return data.results;\n};\n\n//////////////////////////// Not\n// `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`;\n// `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=687e4525be1a45f56930e098a4988fd3`;\n//////////////////////////// Not\n\nexport const getMoviesForQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&api_key=687e4525be1a45f56930e098a4988fd3`\n  );\n  console.log('data: ', data);\n  return data;\n};\n\n//////////////////////////// Not\n// return data.results;\n// `https://api.themoviedb.org/3/search/movie?query=Lviv&api_key=687e4525be1a45f56930e098a4988fd3`\n// `${BASE_URL}/search/movie?query=${query}&include_adult=true&language=en-US&api_key=${API_KEY}`;\n//////////////////////////// Not\n\n//! Чомусь невірно!\n// export async function getMoviesDetails(movieId) {\n//   return axios.get(\n//     `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n//   );\n// }\n\nexport const getMoviesDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n  );\n  console.log('search (movieId):', data);\n  return data;\n};\n///////////////////////////////////\n//  https://api.themoviedb.org/3/movie/575264?language=en-US&api_key=687e4525be1a45f56930e098a4988fd3\n// `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`;\n///////////////////////////////////\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`\n  );\n  console.log('getCast (data):', data);\n  console.log('getCast (data.cast):', data.cast);\n  return data;\n};\n\n///////////////////////////////////\n\n// export async function getReviews(movieId) {\n//   return axios.get(\n//     `${BASE_URL}/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`,\n//   );\n// }\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`\n  );\n  console.log('getReviews (data):', data);\n  console.log('getReviews (data.results):', data.results);\n  return data.results;\n};\n"],"names":["ErrorMessageWrapper","styled","message","ListItem","AuthorText","AuthorName","Review","author","content","movieId","useParams","useState","reviews","setReviews","loading","setLoading","error","setError","scrollToAdditional","window","scrollTo","top","behavior","useEffect","getReviews","response","errorMessage","data","getReviewsInfo","Loader","ErrorMessage","length","map","id","BASE_URL","API_KEY","getTrendingMovies","axios","console","log","results","getMoviesForQuery","query","getMoviesDetails","getCast","cast"],"sourceRoot":""}