{"version":3,"file":"static/js/158.1096b973.chunk.js","mappings":"kNAsBA,EAhBkB,SAAC,GAAgC,IAA9BA,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MACpC,OACE,0BACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAArB,WAEI,gBACEI,IAAKH,EAAW,UAVX,mCAUW,OAAiBA,GAR3C,8EASUI,IAAKH,KAGT,wBAAKA,QAIZ,EClBYI,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1BC,QAAQC,IAAI,wBAAyBF,GACrC,IAAMG,EAAaC,MAAMC,QAAQL,IAAWA,EAAOM,OAEnD,OACE,yBACGH,GACCH,EAAOO,KAAI,SAAAC,GACT,OACE,0BACE,SAAC,EAAD,CAEEf,GAAIe,EAAMf,GACVC,YAAac,EAAMd,YACnBC,MAAOa,EAAMb,OAHRa,EAAMf,KAOlB,KAGR,EAED,G,0LCtBagB,EAAOC,EAAAA,GAAAA,KAAH,yEAMJC,EAAQD,EAAAA,GAAAA,MAAH,6JAWLE,EAAMF,EAAAA,GAAAA,OAAH,mLAYHG,GAASH,EAAAA,EAAAA,IAAOI,EAAAA,IAAPJ,CAAH,qH,SCmCnB,EA5De,WAAO,IAAD,IACnB,GAAwCK,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAemB,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAEMC,EAAQN,EAAaO,IAAI,SA+B/B,OAtBAC,EAAAA,EAAAA,YAAU,WAAM,wCAMd,oGAEIH,GAAW,GAFf,UAG4BI,EAAAA,EAAAA,GAAkBH,GAH9C,OAGUI,EAHV,OAIIP,EAAUO,GAJd,gDAMuB,iBAAf,KAAMC,MACR1B,QAAQ2B,MAAM,mCAPpB,yBAUIP,GAAW,GAVf,6EANc,sBACTC,EADS,mCAmBdO,GAjBEV,EAAU,GAkBb,GAAE,CAACG,EAAOL,KAGT,4BACE,UAACR,EAAD,CAAMqB,KAAK,SAASC,SA/BH,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnBlB,EAAgB,CAAEK,MAAOY,EAAKE,SAASd,MAAMe,QAC7CH,EAAKI,OACN,EA0BG,WACE,SAAC3B,EAAD,CACE4B,KAAK,SACLC,YAAY,SACZ,aAAW,SACXC,KAAK,WAEP,SAAC7B,EAAD,CAAK2B,KAAK,SAAV,UACE,SAAC1B,EAAD,CAAQ6B,KAAK,YAIhBtB,IAAW,SAACuB,EAAA,EAAD,IACgB,KAA3B,UAAA3C,EAAO4C,eAAP,eAAgBtC,SAAgBgB,IAC/B,yBAAG,qDAAkDA,EAAM,QAGjC,KAA3B,UAAAtB,EAAO4C,eAAP,eAAgBtC,UAAgB,SAACP,EAAA,EAAD,CAAWC,OAAQA,EAAO4C,YAGhE,C,qHC/DKC,EAAW,+BAGJC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,sDAHT,qCAEiB,uBACvBG,EADuB,EACvBA,KAGR/C,QAAQC,IAAI,SAAU8C,GAJS,kBAKxBA,EAAKJ,SALmB,2CAAH,qDAajBnB,EAAiB,mCAAG,WAAMH,GAAN,yFACRyB,EAAAA,EAAAA,IAAA,UAClBF,EADkB,+BACavB,EADb,8CADQ,uBACvB0B,EADuB,EACvBA,KAGR/C,QAAQC,IAAI,SAAU8C,GAJS,kBAKxBA,GALwB,2CAAH,qD","sources":["components/MovieCard/MovieCard.jsx","components/MovieList/MovieList.jsx","pages/Movies.styled.js","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\nconst DEFAULT_IMG =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst MovieCard = ({ id, poster_path, title }) => {\n  return (\n    <div>\n      <Link to={`/movies/${id}`}>\n        {\n          <img\n            src={poster_path ? `${BASE_URL}${poster_path}` : DEFAULT_IMG}\n            alt={title}\n          />\n        }\n        <h2>{title}</h2>\n      </Link>\n    </div>\n  );\n};\n\nexport default MovieCard;\n\n//? Var.3\n// const MovieCard = ({ photo, name, character }) => {\n//   return (\n//     <li>\n//       {<img src={photo ? `${BASE_URL}${photo}` : DEFAULT_IMG} alt={name} />}\n//       <h2>{name}</h2>\n//       <p>Character: {character}</p>\n//     </li>\n//   );\n// };\n\n// export default MovieCard;\n\n//? Var.4\n// import { Link, useLocation } from 'react-router-dom';\n// import ListItem from './CardItem.styled';\n// // import defaultIMG from '../../images/no-image.png'\n\n// const MovieCard  = ({ id, poster_path, title }) => {\n//   const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w300';\n//   const location = useLocation();\n//   return (\n//     <ListItem>\n//       <Link to={`/movies/${id}`} state={{ from: location }}>\n//         <img\n//           className=\"filmImg\"\n//           src={`${BASE_IMG_URL}${poster_path}`}\n//           alt={title}\n//         />\n//         <h2 className=\"title\">{title}</h2>\n//       </Link>\n//     </ListItem>\n//   );\n// };\n\n//? Var.2\n// const PostListItem = ({ id, title, userId, body }) => {\n//   return (\n//     <li className=\"postListItem\">\n//       <Link to={`/post-details/${id}`}>\n//         <span>Id: {id}</span>\n//         <h3>Title: {title}</h3>\n//         <h4>User Id: {userId}</h4>\n//         <p>Body: {body}</p>\n//       </Link>\n//     </li>\n//   );\n// };\n","import MovieCard from 'components/MovieCard/MovieCard';\n\nexport const MovieList = ({ movies }) => {\n  console.log('movies in MovieList: ', movies);\n  const showMovies = Array.isArray(movies) && movies.length;\n\n  return (\n    <div>\n      {showMovies &&\n        movies.map(movie => {\n          return (\n            <div>\n              <MovieCard\n                key={movie.id}\n                id={movie.id}\n                poster_path={movie.poster_path}\n                title={movie.title}\n              />\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default MovieList;\n","import { styled } from 'styled-components';\nimport { BiSearchAlt } from 'react-icons/bi';\n\nexport const Form = styled.form`\n  position: relative;\n\n  margin-bottom: 40px;\n`;\n\nexport const Input = styled.input`\n  height: 36px;\n  width: 100%;\n\n  padding-left: 36px;\n\n  border-radius: 8px;\n  border-color: #132b55;\n  border-style: solid;\n`;\n\nexport const Btn = styled.button`\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n\n  background-color: transparent;\n  border: none;\n\n  cursor: pointer;\n`;\n\nexport const Search = styled(BiSearchAlt)`\n  display: block;\n\n  color: #132b55;\n\n  &:hover,\n  &:focus {\n    color: #a67000;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesForQuery } from 'services/api';\nimport { Loader } from 'components/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Btn, Form, Input, Search } from './Movies.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const query = searchParams.get('query');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (!query) {\n      setMovies([]);\n      return;\n    }\n\n    async function getMovies() {\n      try {\n        setLoading(true);\n        const allMovies = await getMoviesForQuery(query);\n        setMovies(allMovies);\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') {\n          console.error('Something went wrong. Try again');\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovies();\n  }, [query, setSearchParams]);\n\n  return (\n    <div>\n      <Form role=\"search\" onSubmit={handleSubmit}>\n        <Input\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          name=\"query\"\n        />\n        <Btn type=\"submit\">\n          <Search size=\"28\"></Search>\n        </Btn>\n      </Form>\n\n      {loading && <Loader />}\n      {movies.results?.length === 0 && query && (\n        <p>Sorry. We can't find movies matching your query \"{query}\".</p>\n      )}\n\n      {movies.results?.length !== 0 && <MovieList movies={movies.results} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '687e4525be1a45f56930e098a4988fd3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  console.log('data: ', data);\n  return data.results;\n};\n\n//////////////////////////// Not\n// `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`;\n// `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=687e4525be1a45f56930e098a4988fd3`;\n//////////////////////////// Not\n\nexport const getMoviesForQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&api_key=687e4525be1a45f56930e098a4988fd3`\n  );\n  console.log('data: ', data);\n  return data;\n};\n\n//////////////////////////// Not\n// return data.results;\n// `https://api.themoviedb.org/3/search/movie?query=Lviv&api_key=687e4525be1a45f56930e098a4988fd3`\n// `${BASE_URL}/search/movie?query=${query}&include_adult=true&language=en-US&api_key=${API_KEY}`;\n//////////////////////////// Not\n"],"names":["id","poster_path","title","to","src","alt","MovieList","movies","console","log","showMovies","Array","isArray","length","map","movie","Form","styled","Input","Btn","Search","BiSearchAlt","useSearchParams","searchParams","setSearchParams","useState","setMovies","loading","setLoading","query","get","useEffect","getMoviesForQuery","allMovies","code","error","getMovies","role","onSubmit","event","preventDefault","form","currentTarget","elements","value","reset","type","placeholder","name","size","Loader","results","BASE_URL","getTrendingMovies","axios","data"],"sourceRoot":""}