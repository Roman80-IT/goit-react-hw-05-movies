{"version":3,"file":"static/js/517.fb4eae0f.chunk.js","mappings":"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","sources":["components/Additional/Additional.styled.js","components/Additional/Additional.jsx","pages/MovieDetailsPage.styled.js","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  background-color: #233e88;\n`;\n\nexport const Title = styled.div`\n  margin-bottom: 12px;\n\n  text-transform: uppercase;\n  color: #ffd273;\n`;\n\nexport const List = styled.ul`\n  padding-left: 16px;\n  list-style-type: disclosure-closed;\n  color: white;\n`;\n\nexport const ListItem = styled.li`\n  &:hover,\n  &:focus {\n    color: #ffad00;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: inherit;\n\n  &.active {\n    text-decoration: underline;\n  }\n`;\n","import {\n  Container,\n  List,\n  ListItem,\n  StyledLink,\n  Title,\n} from './Additional.styled';\nimport { Wrapper } from 'components/GeneralStyled/General.styled';\n\nexport const Additional = ({ backLocation, setCoordinate }) => {\n  return (\n    <Container>\n      <Wrapper>\n        <Title>Additional information</Title>\n        <List>\n          <ListItem>\n            <StyledLink to=\"cast\" state={backLocation}>\n              Cast\n            </StyledLink>\n          </ListItem>\n          <ListItem>\n            <StyledLink to=\"reviews\" state={backLocation}>\n              Reviews\n            </StyledLink>\n          </ListItem>\n        </List>\n      </Wrapper>\n    </Container>\n  );\n};\n","import { styled } from 'styled-components';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { Link } from 'react-router-dom';\n\nexport const Details = styled.div`\n  display: flex;\n  gap: 24px;\n\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Poster = styled.img`\n  max-width: 350px;\n  height: 100%;\n`;\n\nexport const SubTitle = styled.h3`\n  margin-top: 24px;\n\n  color: #132b55;\n`;\n\nexport const List = styled.ul`\n  padding-left: 24px;\n  list-style-type: disc;\n`;\n\nexport const Back = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  width: fit-content;\n\n  margin-bottom: 16px;\n  padding: 4px 12px;\n\n  text-decoration: none;\n  color: #132b55;\n  background-color: #ffd273;\n  border: 1px solid #ffad00;\n  border-radius: 8px;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #ffad00;\n    background-color: #132b55;\n    border-color: #132b55;\n  }\n`;\n\nexport const Arrow = styled(BiArrowBack)`\n  display: block;\n`;\n","import React, { useEffect, useState, useMemo, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { Additional } from 'components/Additional/Additional';\nimport { getMoviesDetails } from 'services/api';\nimport {\n  Arrow,\n  Back,\n  Details,\n  List,\n  Poster,\n  SubTitle,\n} from './MovieDetailsPage.styled';\nimport { Wrapper, Title } from 'components/GeneralStyled/General.styled';\nimport { Loader } from 'components/Loader';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\nconst DEFAULT_IMG =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const [moviesDetail, setMoviesDetail] = useState(null); // null\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function getDetails() {\n      try {\n        const response = await getMoviesDetails(movieId);\n        console.log('Data from API:', response); // Вивести дані, отримані з API\n        setMoviesDetail(response);\n      } catch (e) {\n        if (e.code !== 'ERR_CANCELED') {\n          toast.error('Something went wrong. Try again.');\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getDetails();\n  }, [movieId]);\n\n  console.log('MovieDetails: ', MovieDetails);\n\n  const countScore = useMemo(() => {\n    return Math.round(moviesDetail?.vote_average * 10); //  ?. для безпеки\n  }, [moviesDetail?.vote_average]); //  ?. для безпеки\n\n  if (loading) {\n    return <Loader />;\n  }\n  console.log('moviesDetail in render:', moviesDetail); // Вивести дані перед відображенням\n  return (\n    <div>\n      <Wrapper>\n        <Back to={location.state ?? '/'}>\n          <Arrow /> Go back\n        </Back>\n        {moviesDetail && ( // Замість moviesDetail.length !== 0\n          <Details>\n            <Poster\n              src={\n                moviesDetail.poster_path\n                  ? `${BASE_URL}${moviesDetail.poster_path}`\n                  : DEFAULT_IMG\n              }\n              alt={`${moviesDetail.title} poster`}\n            />\n            <div>\n              <Title>{`${\n                moviesDetail.title\n              } (${moviesDetail.release_date?.slice(0, 4)})`}</Title>\n              <p>User score: {countScore} %</p>\n              <SubTitle>Overview</SubTitle>\n              <p>{moviesDetail.overview}</p>\n              <SubTitle>Genres</SubTitle>\n              <List>\n                {moviesDetail.genres?.map(({ name, id }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </List>\n            </div>\n          </Details>\n        )}\n      </Wrapper>\n      <Additional backLocation={location.state} />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n\n///////////////////////////////////////////\n\n// import React from 'react';\n\n// const MovieDetails = () => {\n//   return <div>MovieDetails</div>;\n// };\n\n// export default MovieDetails;\n\n/////////////////////////////////////////////////////\n\n// import { Suspense, useEffect, useMemo, useState } from 'react';\n// import { Outlet, useLocation, useParams } from 'react-router-dom';\n// import toast from 'react-hot-toast';\n\n// import { Additional } from 'components/Additional/Additional';\n// import { getMoviesDetails } from 'services/api';\n// import {\n//   Arrow,\n//   Back,\n//   Details,\n//   List,\n//   Poster,\n//   SubTitle,\n// } from './MovieDetailsPage.styled';\n\n// import { Wrapper, Title } from 'components/GeneralStyled/General.styled';\n// import { Loader } from 'components/Loader';\n\n// const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n// const DEFAULT_IMG =\n//   'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n// const MovieDetails = () => {\n//   const { movieId } = useParams();\n//   const location = useLocation();\n\n//   const [moviesDetail, setMoviesDetail] = useState([]);\n//   const [loading, setLoading] = useState(false);\n\n//   useEffect(() => {\n//     async function getDetails() {\n//       try {\n//         setLoading(true);\n//         const responce = await getMoviesDetails(movieId);\n//         console.log('responce: ', responce);\n//         setMoviesDetail(responce.data);\n//       } catch (e) {\n//         if (e.code !== 'ERR_CANCELED') {\n//           toast.error('Something went wrong. Try again.');\n//         }\n//       } finally {\n//         setLoading(false);\n//       }\n//     }\n\n//     getDetails();\n//   }, [movieId]);\n\n//   const countScore = useMemo(() => {\n//     return Math.round(moviesDetail.vote_average * 10);\n//   }, [moviesDetail.vote_average]);\n\n//   if (loading) {\n//     return <Loader></Loader>;\n//   }\n\n//   return (\n//     <div>\n//       <Wrapper>\n//         <Back to={location.state ?? '/'}>\n//           <Arrow /> Go back\n//         </Back>\n//         {moviesDetail.length !== 0 && (\n//           <Details>\n//             <Poster\n//               src={\n//                 moviesDetail.poster_path\n//                   ? `${BASE_URL}${moviesDetail.poster_path}`\n//                   : DEFAULT_IMG\n//               }\n//               alt={`${moviesDetail.title} poster`}\n//             />\n//             <div>\n//               <Title>{`${\n//                 moviesDetail.title\n//               } (${moviesDetail.release_date?.slice(0, 4)})`}</Title>\n//               <p>User score: {countScore} %</p>\n//               <SubTitle>Overview</SubTitle>\n//               <p>{moviesDetail.overview}</p>\n//               <SubTitle>Genres</SubTitle>\n//               <List>\n//                 {moviesDetail.genres?.map(({ name, id }) => (\n//                   <li key={id}>{name}</li>\n//                 ))}\n//               </List>\n//             </div>\n//           </Details>\n//         )}\n//       </Wrapper>\n//       <Additional backLocation={location.state}></Additional>\n//       <Suspense fallback={<Loader />}>\n//         <Outlet />\n//       </Suspense>\n//     </div>\n//   );\n// };\n\n// export default MovieDetails;\n\n// import { Title, Wrapper } from 'components/Global/Global.styled';\n/////////////////////////////////////////////////////////////////////////\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '687e4525be1a45f56930e098a4988fd3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  console.log('data: ', data);\n  return data.results;\n};\n\n//////////////////////////// Not\n// `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`;\n// `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=687e4525be1a45f56930e098a4988fd3`;\n//////////////////////////// Not\n\nexport const getMoviesForQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&api_key=687e4525be1a45f56930e098a4988fd3`\n  );\n  console.log('data: ', data);\n  return data;\n};\n\n//////////////////////////// Not\n// return data.results;\n// `https://api.themoviedb.org/3/search/movie?query=Lviv&api_key=687e4525be1a45f56930e098a4988fd3`\n// `${BASE_URL}/search/movie?query=${query}&include_adult=true&language=en-US&api_key=${API_KEY}`;\n//////////////////////////// Not\n\n// export async function getMoviesDetails(id) {\n//   return axios.get(`${BASE_URL}/movie/${id}?language=en-US&api_key=${API_KEY}`);\n// }\n\nexport const getMoviesDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n  );\n  console.log('search (movieId):', data);\n  console.log('search (movieId):', data.belongs_to_collection);\n  return data;\n};\n//  https://api.themoviedb.org/3/movie/575264?language=en-US&api_key=687e4525be1a45f56930e098a4988fd3\n// `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`;\n// `${BASE_URL}/search/${movieId}?language=en-US&api_key=${API_KEY}`;\n///////////////////////////////////\n// export const getMovieDetails = async id => {\n//   const { data } = await axios.get(`/movie/${id}?${searchParams}`);\n//   return data;\n// };\n"],"names":["Container","styled","Title","List","ListItem","StyledLink","NavLink","Additional","backLocation","setCoordinate","to","state","Details","Poster","SubTitle","Back","Link","Arrow","BiArrowBack","MovieDetails","movieId","useParams","location","useLocation","useState","moviesDetail","setMoviesDetail","loading","setLoading","useEffect","getMoviesDetails","response","console","log","code","toast","getDetails","countScore","useMemo","Math","round","vote_average","Loader","src","poster_path","alt","title","release_date","slice","overview","genres","map","name","id","Suspense","fallback","BASE_URL","API_KEY","getTrendingMovies","axios","data","results","getMoviesForQuery","query","belongs_to_collection"],"sourceRoot":""}