{"version":3,"file":"static/js/711.999b9440.chunk.js","mappings":"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","sources":["components/ErrorMessage/ErrorMessage.styled.js","components/ErrorMessage/ErrorMessage.jsx","components/MovieCard/CastCard.styled.js","components/MovieCard/CastCard.jsx","pages/Cast.styled.js","pages/Cast.jsx","services/api.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const ErrorMessageWrapper = styled.div`\n  background-color: #ff6666; /* Червоний фон */\n  color: #fff; /* Білий колір тексту */\n  border: 2px solid #cc0000; /* Червона рамка */\n  padding: 10px;\n  font-weight: bold;\n  border-radius: 5px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  text-align: center;\n  font-size: 16px;\n  margin: 10px;\n`;\n","import React from 'react';\nimport { ErrorMessageWrapper } from './ErrorMessage.styled';\n\nconst ErrorMessage = ({ message }) => {\n  return <ErrorMessageWrapper>{message}</ErrorMessageWrapper>;\n};\n\nexport default ErrorMessage;\n","import { styled } from 'styled-components';\n\nexport const ListItem = styled.li`\n  padding: 8px;\n\n  box-shadow: rgba(166, 112, 0, 0.2) 0px 0px 5px 0px,\n    rgba(166, 112, 0, 0.4) 0px 0px 1px 0px;\n`;\n","import { Title } from 'components/GeneralStyled/General.styled';\nimport { ListItem } from './CastCard.styled';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\nconst DEFAULT_IMG =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport const CastCard = ({ photo, name, character }) => {\n  return (\n    <ListItem>\n      {<img src={photo ? `${BASE_URL}${photo}` : DEFAULT_IMG} alt={name} />}\n      <Title>{name}</Title>\n      <p>{character}</p>\n    </ListItem>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: 1280px;\n  grid-template-columns: repeat(auto-fit, 280px);\n  grid-gap: 28px;\n  justify-content: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCast } from 'services/api';\n\nimport { CastCard } from 'components/MovieCard/CastCard';\nimport { List } from './Cast.styled';\nimport { Wrapper } from 'components/GeneralStyled/General.styled';\nimport { Loader } from 'components/Loader';\nimport ErrorMessage from 'components/ErrorMessage/ErrorMessage';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const scrollToAdditional = () => {\n    window.scrollTo({ top: 500, behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    async function getCastInfo() {\n      try {\n        setLoading(true);\n        const response = await getCast(movieId);\n        setCast(response.cast);\n\n        scrollToAdditional();\n      } catch (error) {\n        // console.log(error.message);\n\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getCastInfo();\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      {loading && <Loader />}\n      {error && <ErrorMessage message={error} />}\n      {cast !== null && (\n        <List>\n          {cast.map(({ profile_path, name, character, id }) => (\n            <CastCard\n              key={id}\n              photo={profile_path}\n              name={name}\n              character={character}\n            ></CastCard>\n          ))}\n        </List>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '687e4525be1a45f56930e098a4988fd3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  console.log('data: ', data);\n  console.log('data: ', data.results);\n  return data.results;\n};\n\n//////////////////////////// Not\n// `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`;\n// `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=687e4525be1a45f56930e098a4988fd3`;\n//////////////////////////// Not\n\nexport const getMoviesForQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&api_key=687e4525be1a45f56930e098a4988fd3`\n  );\n  console.log('data: ', data);\n  return data;\n};\n\n//////////////////////////// Not\n// return data.results;\n// `https://api.themoviedb.org/3/search/movie?query=Lviv&api_key=687e4525be1a45f56930e098a4988fd3`\n// `${BASE_URL}/search/movie?query=${query}&include_adult=true&language=en-US&api_key=${API_KEY}`;\n//////////////////////////// Not\n\n//! Чомусь невірно!\n// export async function getMoviesDetails(movieId) {\n//   return axios.get(\n//     `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n//   );\n// }\n\nexport const getMoviesDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n  );\n  console.log('search (movieId):', data);\n  return data;\n};\n///////////////////////////////////\n//  https://api.themoviedb.org/3/movie/575264?language=en-US&api_key=687e4525be1a45f56930e098a4988fd3\n// `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`;\n///////////////////////////////////\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`\n  );\n  console.log('getCast (data):', data);\n  console.log('getCast (data.cast):', data.cast);\n  return data;\n};\n\n///////////////////////////////////\n\n// export async function getReviews(movieId) {\n//   return axios.get(\n//     `${BASE_URL}/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`,\n//   );\n// }\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`\n  );\n  console.log('getReviews (data):', data);\n  console.log('getReviews (data.results):', data.results);\n  return data.results;\n};\n"],"names":["ErrorMessageWrapper","styled","message","ListItem","CastCard","photo","name","character","src","alt","List","movieId","useParams","useState","cast","setCast","loading","setLoading","error","setError","scrollToAdditional","window","scrollTo","top","behavior","useEffect","getCast","response","getCastInfo","Loader","ErrorMessage","map","profile_path","id","BASE_URL","API_KEY","getTrendingMovies","axios","data","console","log","results","getMoviesForQuery","query","getMoviesDetails","getReviews"],"sourceRoot":""}