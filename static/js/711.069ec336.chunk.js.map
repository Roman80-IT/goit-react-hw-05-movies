{"version":3,"file":"static/js/711.069ec336.chunk.js","mappings":"sKAWA,IARqB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QAKtB,OAJIA,GACFC,EAAAA,GAAAA,MAAYD,IAGP,uBAAIA,GACZ,C,8KCPYE,EAAWC,EAAAA,GAAAA,GAAH,+I,SCKRC,EAAW,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACtC,OACE,UAACL,EAAD,YACG,gBAAKM,IAAKH,EAAK,UAPL,mCAOK,OAAiBA,GALrC,8EAK4DI,IAAKH,KAC7D,SAAC,KAAD,UAAQA,KACR,uBAAIC,MAGT,ECbYG,EAAOP,EAAAA,GAAAA,GAAH,kK,oBC4DjB,EAnDa,WACX,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAqB,WACzBC,OAAOC,SAAS,CAAEC,IAAK,IAAKC,SAAU,UACvC,EAsBD,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIR,GAAW,GAFf,UAG2BS,EAAAA,EAAAA,IAAQf,GAHnC,OAGUgB,EAHV,OAIIZ,EAAQY,EAASb,MAEjBM,IANJ,gDAQIQ,QAAQC,IAAI,KAAMC,SAElBX,EAAS,KAAMnB,SAVnB,yBAYIiB,GAAW,GAZf,6EADc,uBAAC,WAAD,wBAiBdc,EACD,GAAE,CAACpB,KAGF,UAAC,KAAD,WACGK,IAAW,SAACgB,EAAA,EAAD,IACXd,IAAS,SAACe,EAAA,EAAD,CAAcjC,QAASkB,IACvB,OAATJ,IACC,SAACJ,EAAD,UACGI,EAAKoB,KAAI,gBAAGC,EAAH,EAAGA,aAAc7B,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAW6B,EAAlC,EAAkCA,GAAlC,OACR,SAAChC,EAAD,CAEEC,MAAO8B,EACP7B,KAAMA,EACNC,UAAWA,GAHN6B,EAFC,QAYnB,C,2KC1DKC,EAAW,+BACXC,EAAU,mCAEHC,EAAiB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sDACoCC,IAF5B,uBACvBG,EADuB,EACvBA,KAGRb,QAAQC,IAAI,SAAUY,GACtBb,QAAQC,IAAI,SAAUY,EAAKC,SALI,kBAMxBD,EAAKC,SANmB,2CAAH,qDAcjBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,+BACaO,EADb,8CADQ,uBACvBH,EADuB,EACvBA,KAGRb,QAAQC,IAAI,SAAUY,GAJS,kBAKxBA,GALwB,2CAAH,sDAqBjBI,EAAgB,mCAAG,WAAMlC,GAAN,yFACP6B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACA1B,EADA,mCACkC2B,IAF3B,uBACtBG,EADsB,EACtBA,KAGRb,QAAQC,IAAI,oBAAqBY,GAJH,kBAKvBA,GALuB,2CAAH,sDAYhBf,EAAO,mCAAG,WAAMf,GAAN,yFACE6B,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACA1B,EADA,2CAC0C2B,IAF5C,uBACbG,EADa,EACbA,KAGRb,QAAQC,IAAI,kBAAmBY,GAC/Bb,QAAQC,IAAI,uBAAwBY,EAAK3B,MALpB,kBAMd2B,GANc,2CAAH,qD","sources":["components/ErrorMessage.jsx","components/MovieCard/CastCard.styled.js","components/MovieCard/CastCard.jsx","pages/Cast.styled.js","pages/Cast.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport { toast } from 'react-hot-toast';\n\nconst ErrorMessage = ({ message }) => {\n  if (message) {\n    toast.error(message);\n  }\n\n  return <p>{message}</p>;\n};\n\nexport default ErrorMessage;\n\n//////////////////////////////////////////\n// import { toast } from 'react-hot-toast';\n\n// const ErrorMessage = ({ message }) => {\n//   if (message) {\n//     toast.error(message);\n//   }\n\n//   return null; // Повертаємо null, оскільки компонент буде відповідальним лише за показ повідомлень, і не буде мати видимого відображення на сторінці\n// };\n\n// export default ErrorMessage;\n///////////////////////////////////\n// import React from 'react';\n\n// const ErrorMessage = ({ message }) => {\n//   return <p>{message}</p>;\n// };\n\n// export default ErrorMessage;\n","import { styled } from 'styled-components';\n\nexport const ListItem = styled.li`\n  padding: 8px;\n\n  box-shadow: rgba(166, 112, 0, 0.2) 0px 0px 5px 0px,\n    rgba(166, 112, 0, 0.4) 0px 0px 1px 0px;\n`;\n","import { Title } from 'components/GeneralStyled/General.styled';\nimport { ListItem } from './CastCard.styled';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\nconst DEFAULT_IMG =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport const CastCard = ({ photo, name, character }) => {\n  return (\n    <ListItem>\n      {<img src={photo ? `${BASE_URL}${photo}` : DEFAULT_IMG} alt={name} />}\n      <Title>{name}</Title>\n      <p>{character}</p>\n    </ListItem>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: 1280px;\n  grid-template-columns: repeat(auto-fit, 280px);\n  grid-gap: 28px;\n  justify-content: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCast } from 'services/api';\n\nimport { CastCard } from 'components/MovieCard/CastCard';\nimport { List } from './Cast.styled';\nimport { Wrapper } from 'components/GeneralStyled/General.styled';\nimport { Loader } from 'components/Loader';\nimport ErrorMessage from 'components/ErrorMessage';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const scrollToAdditional = () => {\n    window.scrollTo({ top: 500, behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    async function getCastInfo() {\n      try {\n        setLoading(true);\n        const response = await getCast(movieId);\n        setCast(response.cast);\n\n        scrollToAdditional();\n      } catch (error) {\n        console.log(error.massage);\n\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    getCastInfo();\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      {loading && <Loader />}\n      {error && <ErrorMessage message={error} />}\n      {cast !== null && (\n        <List>\n          {cast.map(({ profile_path, name, character, id }) => (\n            <CastCard\n              key={id}\n              photo={profile_path}\n              name={name}\n              character={character}\n            ></CastCard>\n          ))}\n        </List>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '687e4525be1a45f56930e098a4988fd3';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n  console.log('data: ', data);\n  console.log('data: ', data.results);\n  return data.results;\n};\n\n//////////////////////////// Not\n// `${BASE_URL}/trending/movie/day?language=en-US&api_key=${API_KEY}`;\n// `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=687e4525be1a45f56930e098a4988fd3`;\n//////////////////////////// Not\n\nexport const getMoviesForQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&api_key=687e4525be1a45f56930e098a4988fd3`\n  );\n  console.log('data: ', data);\n  return data;\n};\n\n//////////////////////////// Not\n// return data.results;\n// `https://api.themoviedb.org/3/search/movie?query=Lviv&api_key=687e4525be1a45f56930e098a4988fd3`\n// `${BASE_URL}/search/movie?query=${query}&include_adult=true&language=en-US&api_key=${API_KEY}`;\n//////////////////////////// Not\n\n//! Чомусь невірно!\n// export async function getMoviesDetails(movieId) {\n//   return axios.get(\n//     `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n//   );\n// }\n\nexport const getMoviesDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`\n  );\n  console.log('search (movieId):', data);\n  return data;\n};\n///////////////////////////////////\n//  https://api.themoviedb.org/3/movie/575264?language=en-US&api_key=687e4525be1a45f56930e098a4988fd3\n// `${BASE_URL}/movie/${movieId}?language=en-US&api_key=${API_KEY}`;\n///////////////////////////////////\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`\n  );\n  console.log('getCast (data):', data);\n  console.log('getCast (data.cast):', data.cast);\n  return data;\n};\n\n///////////////////////////////////\n"],"names":["message","toast","ListItem","styled","CastCard","photo","name","character","src","alt","List","movieId","useParams","useState","cast","setCast","loading","setLoading","error","setError","scrollToAdditional","window","scrollTo","top","behavior","useEffect","getCast","response","console","log","massage","getCastInfo","Loader","ErrorMessage","map","profile_path","id","BASE_URL","API_KEY","getTrendingMovies","axios","data","results","getMoviesForQuery","query","getMoviesDetails"],"sourceRoot":""}